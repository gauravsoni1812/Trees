https://practice.geeksforgeeks.org/problems/postorder-traversal/0

iterative
https://practice.geeksforgeeks.org/problems/postorder-traversal-iterative/0


void helper(Node* root,vector<int> &ans){
    if(root==NULL){
        return;
    }
    if(root->left==NULL&&root->right==NULL){
       ans.push_back(root->data);
       return;
    }
   
    helper(root->left, ans);
    helper(root->right,ans);
     ans.push_back(root->data);
}

vector <int> postOrder(Node* root)
{
  // Your code here
   vector<int> ans;
 helper(root,ans);
 return ans;
}


 vector<int> postOrder(Node* node) {
        // code here
        vector<int>v;
        if(node==NULL)return v;
        stack<Node*>st;
        st.push(node);
        
        while(!st.empty()){
            while(!st.empty()){
                auto temp=st.top();
                st.pop();
                v.push_back(temp->data);
                if(temp->left)
                st.push(temp->left);
                if(temp->right)
                st.push(temp->right);
            }
        }
        reverse(v.begin(),v.end());
        return v;
       
    }
