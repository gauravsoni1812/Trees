https://practice.geeksforgeeks.org/problems/inorder-traversal/0


iterative
https://practice.geeksforgeeks.org/problems/inorder-traversal-iterative/0

    void helper(Node* root,vector<int> &ans){
    if(root==NULL){
        return;
    }
    if(root->left==NULL&&root->right==NULL){
       ans.push_back(root->data);
       return;
    }
  
    helper(root->left, ans);
      ans.push_back(root->data);
    helper(root->right,ans);
}
    vector<int> inOrder(Node* root) {
        // Your code here
         vector<int> ans;
 helper(root,ans);
 return ans;
    }


vector<int> inOrder(Node *root)
{
    // code here
    Node *node = root;
    stack<Node *> st;
    vector<int> ans;
    while (true)
    {
        if (node != NULL)
        {
            st.push(node);
            node = node->left;
        }
        else
        {
            if (st.empty())
                break;

            Node *a = st.top();
            st.pop();
            ans.push_back(a->data);
            node = a->right;
        }
    }
    return ans;
}
